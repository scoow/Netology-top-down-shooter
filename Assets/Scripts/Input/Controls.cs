//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace TDShooter.Input
{
    public partial class @Controls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Controls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""0317d317-0e43-4166-8580-b732f5e6ad3c"",
            ""actions"": [
                {
                    ""name"": ""WASD"",
                    ""type"": ""Value"",
                    ""id"": ""8b9f27c1-0ab8-43d6-abdf-b567b25bc343"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""ac475b85-9aaa-426c-b57d-2a5df5552367"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchMachineGun"",
                    ""type"": ""Button"",
                    ""id"": ""47e46983-ca08-4035-b9bf-b7d93354c5f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchShotgun"",
                    ""type"": ""Button"",
                    ""id"": ""a8e0c90f-9a81-4e50-ae44-d1e0673052c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchPlasmaGun"",
                    ""type"": ""Button"",
                    ""id"": ""0f90089b-f267-4e35-a8a2-aaa5b014cec5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchBFG"",
                    ""type"": ""Button"",
                    ""id"": ""d65ae933-2fba-4a38-a847-e75228823486"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowGrenade"",
                    ""type"": ""Button"",
                    ""id"": ""649feae1-67ae-41e1-ada7-06cceceeb183"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NuclearBomb"",
                    ""type"": ""Button"",
                    ""id"": ""36664417-ab6e-425b-ae56-2c776b37f023"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""b7ace0f4-4b7f-4a02-9410-2fa875ef247d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""80746eff-6a50-4a4d-bda4-2e8cec2a0d3f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d27d23c1-e67d-4a27-af39-efef1932adb2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""12ef421d-c245-4049-804c-f5d17a8470de"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e945a1f-d6fc-43d8-916c-e17df96015f5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2dbbc688-8db1-4b38-abc6-a661f19efbb3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4cee8827-05f5-47b2-b4cc-21cb5932ad06"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e72d557f-0268-4ae4-a04b-62143a60e2dd"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSwitchMachineGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e493a94-7aca-4ec4-8386-b4b8114c5851"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSwitchPlasmaGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea54bed4-4b9b-4c21-ab7a-b5d66a0668d4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThrowGrenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c62cd860-f946-454a-b0f1-f19d515a8cc5"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NuclearBomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84f26ab6-351d-4530-a83d-5f50ecb8a0be"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fc68da7-1bce-4441-9db1-3a7ce47cb1cb"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSwitchShotgun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""034bc8ed-5d0f-4776-8fc5-6c647b87b1df"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSwitchBFG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_WASD = m_Player.FindAction("WASD", throwIfNotFound: true);
            m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
            m_Player_WeaponSwitchMachineGun = m_Player.FindAction("WeaponSwitchMachineGun", throwIfNotFound: true);
            m_Player_WeaponSwitchShotgun = m_Player.FindAction("WeaponSwitchShotgun", throwIfNotFound: true);
            m_Player_WeaponSwitchPlasmaGun = m_Player.FindAction("WeaponSwitchPlasmaGun", throwIfNotFound: true);
            m_Player_WeaponSwitchBFG = m_Player.FindAction("WeaponSwitchBFG", throwIfNotFound: true);
            m_Player_ThrowGrenade = m_Player.FindAction("ThrowGrenade", throwIfNotFound: true);
            m_Player_NuclearBomb = m_Player.FindAction("NuclearBomb", throwIfNotFound: true);
            m_Player_PauseGame = m_Player.FindAction("PauseGame", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
        private readonly InputAction m_Player_WASD;
        private readonly InputAction m_Player_Shoot;
        private readonly InputAction m_Player_WeaponSwitchMachineGun;
        private readonly InputAction m_Player_WeaponSwitchShotgun;
        private readonly InputAction m_Player_WeaponSwitchPlasmaGun;
        private readonly InputAction m_Player_WeaponSwitchBFG;
        private readonly InputAction m_Player_ThrowGrenade;
        private readonly InputAction m_Player_NuclearBomb;
        private readonly InputAction m_Player_PauseGame;
        public struct PlayerActions
        {
            private @Controls m_Wrapper;
            public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @WASD => m_Wrapper.m_Player_WASD;
            public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
            public InputAction @WeaponSwitchMachineGun => m_Wrapper.m_Player_WeaponSwitchMachineGun;
            public InputAction @WeaponSwitchShotgun => m_Wrapper.m_Player_WeaponSwitchShotgun;
            public InputAction @WeaponSwitchPlasmaGun => m_Wrapper.m_Player_WeaponSwitchPlasmaGun;
            public InputAction @WeaponSwitchBFG => m_Wrapper.m_Player_WeaponSwitchBFG;
            public InputAction @ThrowGrenade => m_Wrapper.m_Player_ThrowGrenade;
            public InputAction @NuclearBomb => m_Wrapper.m_Player_NuclearBomb;
            public InputAction @PauseGame => m_Wrapper.m_Player_PauseGame;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
                @WASD.started += instance.OnWASD;
                @WASD.performed += instance.OnWASD;
                @WASD.canceled += instance.OnWASD;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @WeaponSwitchMachineGun.started += instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchMachineGun.performed += instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchMachineGun.canceled += instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchShotgun.started += instance.OnWeaponSwitchShotgun;
                @WeaponSwitchShotgun.performed += instance.OnWeaponSwitchShotgun;
                @WeaponSwitchShotgun.canceled += instance.OnWeaponSwitchShotgun;
                @WeaponSwitchPlasmaGun.started += instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchPlasmaGun.performed += instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchPlasmaGun.canceled += instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchBFG.started += instance.OnWeaponSwitchBFG;
                @WeaponSwitchBFG.performed += instance.OnWeaponSwitchBFG;
                @WeaponSwitchBFG.canceled += instance.OnWeaponSwitchBFG;
                @ThrowGrenade.started += instance.OnThrowGrenade;
                @ThrowGrenade.performed += instance.OnThrowGrenade;
                @ThrowGrenade.canceled += instance.OnThrowGrenade;
                @NuclearBomb.started += instance.OnNuclearBomb;
                @NuclearBomb.performed += instance.OnNuclearBomb;
                @NuclearBomb.canceled += instance.OnNuclearBomb;
                @PauseGame.started += instance.OnPauseGame;
                @PauseGame.performed += instance.OnPauseGame;
                @PauseGame.canceled += instance.OnPauseGame;
            }

            private void UnregisterCallbacks(IPlayerActions instance)
            {
                @WASD.started -= instance.OnWASD;
                @WASD.performed -= instance.OnWASD;
                @WASD.canceled -= instance.OnWASD;
                @Shoot.started -= instance.OnShoot;
                @Shoot.performed -= instance.OnShoot;
                @Shoot.canceled -= instance.OnShoot;
                @WeaponSwitchMachineGun.started -= instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchMachineGun.performed -= instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchMachineGun.canceled -= instance.OnWeaponSwitchMachineGun;
                @WeaponSwitchShotgun.started -= instance.OnWeaponSwitchShotgun;
                @WeaponSwitchShotgun.performed -= instance.OnWeaponSwitchShotgun;
                @WeaponSwitchShotgun.canceled -= instance.OnWeaponSwitchShotgun;
                @WeaponSwitchPlasmaGun.started -= instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchPlasmaGun.performed -= instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchPlasmaGun.canceled -= instance.OnWeaponSwitchPlasmaGun;
                @WeaponSwitchBFG.started -= instance.OnWeaponSwitchBFG;
                @WeaponSwitchBFG.performed -= instance.OnWeaponSwitchBFG;
                @WeaponSwitchBFG.canceled -= instance.OnWeaponSwitchBFG;
                @ThrowGrenade.started -= instance.OnThrowGrenade;
                @ThrowGrenade.performed -= instance.OnThrowGrenade;
                @ThrowGrenade.canceled -= instance.OnThrowGrenade;
                @NuclearBomb.started -= instance.OnNuclearBomb;
                @NuclearBomb.performed -= instance.OnNuclearBomb;
                @NuclearBomb.canceled -= instance.OnNuclearBomb;
                @PauseGame.started -= instance.OnPauseGame;
                @PauseGame.performed -= instance.OnPauseGame;
                @PauseGame.canceled -= instance.OnPauseGame;
            }

            public void RemoveCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerActions @Player => new PlayerActions(this);
        public interface IPlayerActions
        {
            void OnWASD(InputAction.CallbackContext context);
            void OnShoot(InputAction.CallbackContext context);
            void OnWeaponSwitchMachineGun(InputAction.CallbackContext context);
            void OnWeaponSwitchShotgun(InputAction.CallbackContext context);
            void OnWeaponSwitchPlasmaGun(InputAction.CallbackContext context);
            void OnWeaponSwitchBFG(InputAction.CallbackContext context);
            void OnThrowGrenade(InputAction.CallbackContext context);
            void OnNuclearBomb(InputAction.CallbackContext context);
            void OnPauseGame(InputAction.CallbackContext context);
        }
    }
}
